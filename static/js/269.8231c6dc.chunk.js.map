{"version":3,"file":"static/js/269.8231c6dc.chunk.js","mappings":"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","sources":["pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx","helpers/normalize.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n  border-bottom: 2px solid whitesmoke;\n  padding: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  padding-top: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 36px;\n`;\nexport const SubTitle = styled.h3`\n  font-size: 24px;\n`;\nexport const Text = styled.p`\n  margin: 0;\n  opacity: 0.9;\n`;\nexport const Button = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  text-decoration: none;\n  color: #18272f;\n  border: 1px solid #18272f;\n  border-radius: 5px;\n  padding: 2px 8px;\n\n  :hover {\n    color: #6317a1;\n  }\n`;\n","import { useState, useCallback, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { MdKeyboardBackspace } from 'react-icons/md';\n\nimport API from 'services/api';\nimport {\n  MainWrapper,\n  ButtonWrapper,\n  Title,\n  SubTitle,\n  Text,\n  Button,\n} from './MovieDetails.styled';\nimport { Fallback } from 'components/Fallback/Fallback.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [movie, setMovie] = useState(null);\n\n  const hadleFetchDetails = useCallback(async () => {\n    const response = await API.details(movieId);\n\n    setMovie(response);\n  }, [movieId, setMovie]);\n\n  useEffect(() => {\n    hadleFetchDetails();\n  }, [hadleFetchDetails]);\n  return (\n    <>\n      <Button to={backLinkHref}>\n        <MdKeyboardBackspace size=\"20px\" />\n        Go back\n      </Button>\n      {!movie && <Title>Loading</Title>}\n      {movie && (\n        <>\n          <MainWrapper>\n            <img src={movie.poster} alt={movie.title} />\n            <div>\n              <Title>{`${movie.title} (${movie.year})`}</Title>\n              <Text>{`User Score: ${movie.userScore}`}</Text>\n              <SubTitle>Overview</SubTitle>\n              <Text>{movie.overview}</Text>\n              <SubTitle>Genres</SubTitle>\n              <Text>{movie.genres}</Text>\n            </div>\n          </MainWrapper>\n          <ButtonWrapper>\n            <Button to={`cast`}>Cast</Button>\n            <Button to={`reviews`}>Reviews</Button>\n          </ButtonWrapper>\n        </>\n      )}\n      <Suspense fallback={<Fallback>Please wait</Fallback>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import previewPlaceholder from 'images/preview-placeholder.png'\nimport castPlaceholder from 'images/cast-placeholder.jpg'\nimport detailsPlaceholder from 'images/details-placeholder.jpg'\n\nconst base_url = \"https://image.tmdb.org/t/p/\";\n// const backdrop_sizes = ['w300', 'w780', 'w1280', 'original'];\n// const logo_sizes = ['w45', 'w92', 'w154', 'w185', 'w300', 'w500', 'original'];\nconst poster_sizes = ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'];\nconst profile_sizes = ['w45', 'w185', 'h632', 'original'];\n\nconst forList = (data) => data.results.map(movie => ({\n    title: movie.title,\n    poster: movie.poster_path ? base_url + poster_sizes[3] + movie.poster_path : previewPlaceholder,\n    id: movie.id,\n}))\n\nconst forDetails = movie => ({\n    title: movie.title,\n    poster: movie.poster_path ? base_url + poster_sizes[3] + movie.poster_path : detailsPlaceholder,\n    year: new Date(movie.release_date).getFullYear(),\n    userScore: movie.vote_average !== 0.0 ? `${Math.floor(movie.vote_average * 10)}%` : 'no ratings yet',\n    overview: movie.overview,\n    genres: movie.genres.map(genre => genre.name).join(', ')\n})\n\nconst forCast = movie => movie.cast.map(actor => ({\n    id: actor.id,\n    photo: actor.profile_path ? base_url + profile_sizes[0] + actor.profile_path : castPlaceholder,\n    name: actor.name,\n    character: actor.character,\n})).filter(actor => !actor.character.includes('uncredited'))\n\nconst forReviews = data => data.results.map(review => ({\n    id: review.id,\n    author: review.author,\n    content: review.content,\n}))\n\n\nconst normalize = { forList, forDetails, forCast, forReviews };\n\nexport default normalize;","import axios from \"axios\"\nimport normalize from \"helpers/normalize\";\n\n\nconst movieDB = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: { api_key: '2b43cfeb8fadffb304d7dda7b2d5a230' }\n});\n\nconst popular = async () => {\n    const response = await movieDB.get('trending/movie/week');\n    return normalize.forList(response.data);\n};\n\nconst search = async (query) => {\n    const response = await movieDB.get('search/movie', { params: { query } });\n    return normalize.forList(response.data);\n};\n\nconst details = async (id) => {\n    const response = await movieDB.get(`movie/${id}`);\n    return normalize.forDetails(response.data);\n};\n\nconst cast = async (id) => {\n    const response = await movieDB.get(`movie/${id}/credits`);\n    return normalize.forCast(response.data);\n};\n\nconst reviews = async (id) => {\n    const response = await movieDB.get(`movie/${id}/reviews`);\n    return normalize.forReviews(response.data);\n};\n\nconst API = {\n    popular, search, details, cast, reviews\n}\n\nexport default API;\n"],"names":["MainWrapper","styled","ButtonWrapper","Title","SubTitle","Text","Button","Link","MovieDetails","movieId","useParams","backLinkHref","useLocation","state","from","useState","movie","setMovie","hadleFetchDetails","useCallback","API","response","useEffect","to","size","src","poster","alt","title","year","userScore","overview","genres","Suspense","fallback","base_url","poster_sizes","profile_sizes","forList","data","results","map","poster_path","id","forDetails","detailsPlaceholder","Date","release_date","getFullYear","vote_average","Math","floor","genre","name","join","forCast","cast","actor","photo","profile_path","character","filter","includes","forReviews","review","author","content","movieDB","axios","baseURL","params","api_key","popular","get","normalize","search","query","details","reviews"],"sourceRoot":""}