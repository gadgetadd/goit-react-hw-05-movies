{"version":3,"file":"static/js/244.eeef36a7.chunk.js","mappings":"4SAEaA,EAAOC,EAAAA,EAAAA,KAAH,+GAOJC,EAAQD,EAAAA,EAAAA,MAAH,+EAMLE,EAASF,EAAAA,EAAAA,OAAH,gJAQNG,EAAQH,EAAAA,EAAAA,KAAH,8G,SCjBZI,EAAW,SAAAC,GACf,IAAMC,EAAS,CAAC,EAOhB,OANKD,EAAOE,OAEDF,EAAOE,OAAOC,OAAS,KAChCF,EAAOC,OAAS,iCAFhBD,EAAOC,OAAS,kCAKXD,CACR,EAEc,SAASG,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAC7BC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbN,OAAQ,IAEVH,SAAAA,EACAM,SAAU,SAAAL,GACc,KAAlBA,EAAOE,QACXG,EAASL,EAAOE,OACjB,IAGH,OACE,UAACR,EAAD,CAAMW,SAAUC,EAAOG,aAAvB,WACE,SAACb,EAAD,CACEc,KAAK,SACLC,KAAK,OACLC,SAAUN,EAAOO,aACjBC,MAAOR,EAAON,OAAOE,OACrBa,YAAY,WAEbT,EAAOL,OAAOC,QAAS,SAACJ,EAAD,UAAQQ,EAAOL,OAAOC,SAAkB,MAChE,SAACL,EAAD,CAAQc,KAAK,SAAb,UACE,SAAC,MAAD,CAAuBK,KAAK,OAAOC,MAAM,kBAIhD,C,kCCnCc,SAASC,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMtB,EAAM,UAAGkB,EAAaK,IAAI,YAApB,QAA4B,GAClCC,EAAsB,OAAXH,EAMXI,GAAmBC,EAAAA,EAAAA,cAAW,iBAAC,uFACpB,KAAX1B,EAD+B,0CAGR2B,EAAAA,EAAAA,OAAW3B,GAHH,OAGzB4B,EAHyB,OAI/BN,EAAUM,GAJqB,gDAM/BC,QAAQC,IAAR,MAN+B,yDASlC,CAAC9B,IAMJ,OAJA+B,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,CAACA,KAGF,iCACE,SAACvB,EAAD,CAAYC,SArBK,SAAA6B,GACnBb,EAAgB,CAAEc,EAAGD,EAAME,OAAOC,eACnC,IAoBInC,KACIwB,IAAY,SAACY,EAAA,EAAD,KACZZ,IACC,iCACE,SAACa,EAAA,EAAD,CAAWC,MAAK,8BAAyBtC,EAAzB,QAChB,SAAC,IAAD,CAAWqB,OAAQA,UAKhC,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  position: relative;\n  text-align: center;\n  width: 280px;\n  margin: 0 auto 36px;\n`;\n\nexport const Input = styled.input`\n  height: 36px;\n  width: 100%;\n  padding: 5px 10px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 2px;\n  right: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\nexport const Alert = styled.span`\n  position: absolute;\n  width: 100%;\n  left: 0;\n  top: 40px;\n  color: #a73e1ec8;\n`;\n","import PropTypes from \"prop-types\"\nimport { useFormik } from 'formik';\nimport { HiOutlineSearchCircle } from 'react-icons/hi';\n\nimport { Form, Input, Button, Alert } from './SearchForm.styled';\n\nconst validate = values => {\n  const errors = {};\n  if (!values.search) {\n    errors.search = 'Please, enter your search query';\n  } else if (values.search.length > 30) {\n    errors.search = 'Must be 30 characters or less';\n  }\n\n  return errors;\n};\n\nexport default function SearchForm({ onSubmit }) {\n  const formik = useFormik({\n    initialValues: {\n      search: '',\n    },\n    validate,\n    onSubmit: values => {\n      if (values.search === '') return;\n      onSubmit(values.search);\n    },\n  });\n\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <Input\n        name=\"search\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.search}\n        placeholder=\"Search\"\n      />\n      {formik.errors.search ? <Alert>{formik.errors.search}</Alert> : null}\n      <Button type=\"submit\">\n        <HiOutlineSearchCircle size=\"30px\" color=\"#18272fbb\" />\n      </Button>\n    </Form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport API from 'services/api';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport PageTitle from 'components/PageTitle/PageTitle';\nimport Loader from 'components/Loader/Loader';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const search = searchParams.get('q') ?? '';\n  const isLoaded = movies !== null;\n\n  const handleSubmit = query => {\n    setSearchParams({ q: query.trim().toLowerCase() });\n  };\n\n  const hadleFetchSearch = useCallback(async () => {\n    if (search !== '') {\n      try {\n        const response = await API.search(search);\n        setMovies(response);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [search]);\n\n  useEffect(() => {\n    hadleFetchSearch();\n  }, [hadleFetchSearch]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}></SearchForm>\n      {search &&\n        ((!isLoaded && <Loader />) ||\n          (isLoaded && (\n            <>\n              <PageTitle title={`Search results for \"${search}\"`} />\n              <MovieList movies={movies}></MovieList>\n            </>\n          )))}\n    </>\n  );\n}\n"],"names":["Form","styled","Input","Button","Alert","validate","values","errors","search","length","SearchForm","onSubmit","formik","useFormik","initialValues","handleSubmit","name","type","onChange","handleChange","value","placeholder","size","color","Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","get","isLoaded","hadleFetchSearch","useCallback","API","response","console","log","useEffect","query","q","trim","toLowerCase","Loader","PageTitle","title"],"sourceRoot":""}